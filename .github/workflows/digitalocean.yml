# on:
#   release:
#     types: [created]
    
# on:
#   push:
#     branches:
#     - $default-branch
#   pull_request:

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Copy file via scp
      uses: appleboy/scp-action@master
      env:
#         HOST: ${{ secrets.HOST }}
#         USERNAME: ${{ secrets.USERNAME }}
#         PORT: ${{ secrets.PORT }}
#         KEY: ${{ secrets.SSHKEY }}
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSHKEY }}
        port: ${{ secrets.PORT }}
        script: whoami
      with:
        source: "."
        target: "/home/autodeploy/prj"

    - name: Executing remote  command
      uses: appleboy/ssh-action@master
      with:
#         host: ${{ secrets.HOST }}
#         USERNAME: ${{ secrets.USERNAME }}
#         PORT: ${{ secrets.PORT }}
#         KEY: ${{ secrets.SSHKEY }}
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSHKEY }}
        port: ${{ secrets.PORT }}
        script: cat /home/autodeploy/prj/README.md

# env:
#   AZURE_WEBAPP_NAME: your-app-name    # set this to your application's name
#   AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
#   NODE_VERSION: '10.x'                # set this to the node version to use

# jobs:
#   build-and-deploy:
#     name: Build and Deploy
#     runs-on: ubuntu-latest
#     environment: production
#     steps:
#     - uses: actions/checkout@v2
#     - name: Use Node.js ${{ env.NODE_VERSION }}
#       uses: actions/setup-node@v2
#       with:
#         node-version: ${{ env.NODE_VERSION }}
#     - name: npm install, build, and test
#       run: |
#         # Build and test the project, then
#         # deploy to Azure Web App.
#         npm install
#         npm run build --if-present
#         npm run test --if-present
#     - name: 'Deploy to Digital Ocean'
#       uses: azure/webapps-deploy@v2
#       with:
#         app-name: ${{ env.AZURE_WEBAPP_NAME }}
#         publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
#         package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
